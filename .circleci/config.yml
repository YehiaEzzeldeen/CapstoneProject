version: 2.1

jobs:
  Lint HTML:
    docker:
      - image: circleci/python:3.7.3-stretch
      
    working_directory: ~/repo

    steps:
      - checkout
  
      - run:
          name: installing tidy
          command: |
            sudo apt-get install tidy -y

      - run:
          name: Linting HTML
          command: |
            tidy -q -e *.html


  Building Docker Image: 
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Docker-configuration
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
            docker build -t yehia14/capstone .
            docker push yehia14/capstone 

  Deploying to EKS:
    executor: aws-eks/python3
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: green-deployment-${CIRCLE_WORKFLOW_ID:0:7}
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment/green-deployment-${CIRCLE_WORKFLOW_ID:0:7}

  testing:
    executor: aws-eks/python3
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: green-deployment-${CIRCLE_WORKFLOW_ID:0:7}
      - run:
          name: Test cluster
          command: |
            kubectl get svc
            kubectl get nodes
            kubectl get deployment

  curl-test:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add --update curl nodejs npm
            pip install awscli
      - run:
          name: Frontend smoke test.
          command: |
            if curl -s "http://udapeople-hdqqwd1278.s3-website-us-west-1.amazonaws.com" | grep "Yehia"
            then
              return 0
            else
              return 1
            fi

  removing Blue Deployment:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: deleting blue deployment
          command: |
            aws ec2 terminate-instances --instance-ids  i-03140ca0e59eef143                      
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.11.2
workflows:
  main:
    jobs:
      - Lint HTML
      - Building Docker Image:
          requires:
            - Lint HTML
      - aws-eks/create-cluster:
          cluster-name: green-deployment-${CIRCLE_WORKFLOW_ID:0:7}
          requires:
            - Building Docker Image
      - Deploying to EKS:
          requires:
            - aws-eks/create-cluster
      - testing:
          requires:
            - Deploying to EKS